version: '3.7'

services:
  traefik:
    image: traefik:1.7.3
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - web
      - traefik-auth
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
    container_name: traefik

  traefik-auth-cloudflare:
    image: akohlbecker/traefik-auth-cloudflare
    restart: always
    networks:
      - traefik-auth
    container_name: traefik-auth-cloudflare
    # traefik-auth-cloudflare needs to be configured with your auth-domain
    command: ["--auth-domain", "https://foo.cloudflareaccess.com"]
    # set audiences in env vars (DOMAIN_TLD=audience, SUBDOMAIN_DOMAIN_TLD=audience, DOMAIN_TLD_RESOURCE=audience, etc)
    # if cloudflare access is bypassed in any variable, set VARNAME_BYPASS=1 (eg DOMAIN_TLD_BYPASS=1) 
    environment:
      - MY_AWESOME_APP_ORG=12345
      - MY_AWESOME_APP_ORG_ADMIN=54321
      - API_MY_AWESOME_APP_ORG_ADMIN=159753

  echo:
    image: solsson/http-echo
    restart: always
    networks:
      - web
    labels:
      # basic traefik config
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:echo.my-awesome-app.org"
      - "traefik.basic.port=80"
      - "traefik.basic.protocol=http"
      # Each request is first forwared to traefik-auth-cloudflare to check the JWT token
      - "traefik.frontend.auth.forward.address=http://traefik-auth-cloudflare/"
      # Optional: Forward the X-Auth-User header to the backend, which is set by traefik-auth-cloudflare to contain the user email
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-User"

networks:
  traefik-auth:
  web:
    name: web
